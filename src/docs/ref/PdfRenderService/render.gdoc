
h1. render

h2. Purpose

Renders a GSP template as a PDF to an @OutputStream@ .

h2. Examples

{code:java}
class ReportService {
    
    def pdfRenderingService
    
    def writeReportToFile(Report report, File file) {
        def outputStream = new FileOutputStream(file) 
        pdfRenderingService.render(template: "/pdfs/report", model: [report: report], outputStream)
    }
    
}
{code}

If no output stream is provided, the PDF will be written to a ByteArrayOutputStream that will be returned.

{code:java}
class ReportService {
    
    def pdfRenderingService
    
    def renderReport(Report report) {
        ByteArrayOutputStream bytes = pdfRenderingService.render(template: "/pdfs/report", model: [report: report])
    }
    
}
{code}

h2. Description

{code}
OutputStream render(Map renderArgs, OutputStream destination = new ByteArrayOutputStream())
{code}

Parameters (renderArgs):

* @template@ - The template to render
* @model@ (optional) - The model to use in rendering
* @plugin@ (optional) - The plug-in to look for the template in

Return Value:

* The _destination_ argument is always returned.

The rules for template resolution are the same as they are for the standard @render()@ method.